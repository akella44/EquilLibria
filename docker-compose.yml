services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "5173:5173"
    networks:
      - dev

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    depends_on:
      - db
      - redis
    networks:
      - dev
    ports:
      - "8000:8000"
    volumes:
      - ./static:/app/static

  db:
    image: postgres:14
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=hardpassword228
      - POSTGRES_DB=equillibria
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - dev

  redis:
    image: redis:6
    container_name: redis
    networks:
      - dev

  img2latex:
    build:
      context: ./img2latex
      dockerfile: Dockerfile
    container_name: img2latex
    restart: unless-stopped
    networks:
      - dev

  recognition:
    build:
      context: ./formula_recognition
      dockerfile: Dockerfile
    container_name: recognition
    restart: unless-stopped
    networks:
      - dev

  # matching:
  #   image: -----------------------------
  #   container_name: matching
  #   restart: unless-stopped
  #   networks:
  #     - dev

volumes:
  postgres-data:


networks:
  dev:
    driver: bridge
